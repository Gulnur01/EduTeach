# Generated by Django 5.1.2 on 2025-02-01 11:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=50)),
                ('option', models.CharField(max_length=50)),
                ('teacher', models.CharField(max_length=100)),
                ('number', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='static/img/')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('img', models.ImageField(blank=True, null=True, upload_to='static/img/')),
            ],
        ),
        migrations.CreateModel(
            name='ThreeDModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='static/img/')),
                ('model_file', models.FileField(upload_to='models/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('students', models.ManyToManyField(related_name='courses_enrolled', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses_taught', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('pic', models.ImageField(blank=True, null=True, upload_to='static/img/')),
                ('friends', models.ManyToManyField(related_name='my_friends', to='mysite.friend')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='friend',
            name='profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mysite.profile'),
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('seen', models.BooleanField(default=False)),
                ('msg_receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='msg_receiver', to='mysite.profile')),
                ('msg_sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='msg_sender', to='mysite.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Quarter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.IntegerField()),
                ('tema', models.CharField(max_length=150)),
                ('classmodel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades1', to='mysite.classmodel')),
            ],
        ),
        migrations.CreateModel(
            name='Ktp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('tema', models.CharField(max_length=150)),
                ('purpose', models.CharField(max_length=400)),
                ('number_of_hours', models.IntegerField()),
                ('date', models.DateField()),
                ('homework', models.CharField(max_length=150)),
                ('quarter1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ktps', to='mysite.quarter')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='mysite.question')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classmodel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='mysite.classmodel')),
                ('login', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('grade', models.IntegerField()),
                ('tema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.ktp')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='mysite.student')),
            ],
        ),
        migrations.CreateModel(
            name='MathTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equation', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.ktp')),
                ('tasktype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.tasktype')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Мужской'), ('F', 'Женский')], max_length=1, verbose_name='Пол')),
                ('phone_number', models.CharField(blank=True, max_length=15, verbose_name='Телефон')),
                ('address', models.TextField(blank=True, verbose_name='Адрес проживания')),
                ('education_level', models.CharField(blank=True, max_length=255, verbose_name='Уровень образования')),
                ('specialty', models.CharField(blank=True, max_length=255, verbose_name='Специальность')),
                ('alma_mater', models.CharField(blank=True, max_length=255, verbose_name='Учебное заведение')),
                ('diplomas_certificates', models.FileField(blank=True, upload_to='models/', verbose_name='Дипломы и сертификаты')),
                ('work_experience_years', models.PositiveIntegerField(blank=True, null=True, verbose_name='Стаж работы (в годах)')),
                ('subjects_taught', models.CharField(blank=True, max_length=255, verbose_name='Преподаваемые предметы')),
                ('academic_title', models.CharField(blank=True, max_length=255, verbose_name='Академическое звание или степень')),
                ('workplace', models.CharField(blank=True, max_length=255, verbose_name='Место работы')),
                ('position', models.CharField(blank=True, max_length=255, verbose_name='Должность')),
                ('rating', models.FloatField(blank=True, null=True, verbose_name='Рейтинг или оценка')),
                ('awards', models.TextField(blank=True, verbose_name='Награды и грамоты')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questions', models.JSONField(default=dict)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='mysite.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers', models.JSONField()),
                ('analysis_report', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.test')),
            ],
        ),
        migrations.CreateModel(
            name='Testview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.ktp')),
                ('tasktype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.tasktype')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='mysite.testview'),
        ),
        migrations.CreateModel(
            name='VideoLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='static/img/ai.jpeg', upload_to='static/img/')),
                ('description', models.TextField()),
                ('video_file', models.FileField(upload_to='models/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('duration', models.IntegerField(blank=True, help_text='Длительность в секундах', null=True)),
                ('addlesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='add', to='mysite.ktp')),
            ],
        ),
        migrations.CreateModel(
            name='VideoTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.IntegerField(help_text='Время в секундах, когда появится тест')),
                ('question', models.TextField()),
                ('correct_answer', models.CharField(max_length=200)),
                ('options', models.JSONField(default=list, help_text='Список вариантов ответа')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='mysite.videolesson')),
            ],
        ),
        migrations.CreateModel(
            name='WrittenTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.ktp')),
                ('tasktype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.tasktype')),
            ],
        ),
    ]
